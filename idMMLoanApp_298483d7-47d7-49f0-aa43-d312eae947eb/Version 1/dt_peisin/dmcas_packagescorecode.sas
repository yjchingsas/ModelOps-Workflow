/*----------------------------------------------------------------------------------*/
/* Product:            Visual Data Mining and Machine Learning                      */
/* Release Version:    V2021.1.4                                                    */
/* Component Version:  V2021.1.4                                                    */
/* CAS Version:        V.04.00M0P08152021                                           */
/* SAS Version:        V.04.00M0P081521                                             */
/* Site Number:        70180938                                                     */
/* Host:               sas-cas-server-default-client                                */
/* Encoding:           utf-8                                                        */
/* Java Encoding:      UTF8                                                         */
/* Locale:             en_US                                                        */
/* Project GUID:       421c437e-2cd8-4ca7-8310-318464b62602                         */
/* Node GUID:          4560f7f6-c450-486f-8057-274a8cac237f                         */
/* Node Id:            43V6H5PPKK31A6TVHHTK200AN                                    */
/* Algorithm:          Decision Tree                                                */
/* Generated by:       Jacky.Long@sas.com                                           */
/* Date:               01SEP2021:00:24:42                                           */
/*----------------------------------------------------------------------------------*/
package MS_4560f7f6c450486f8057274a8cac237f_01SEP2021002442063 / overwrite=yes;
   dcl double "CredLineAge";
   dcl double "Delinquencies";
   dcl double "DerogatoryMarks";
   dcl double "P_Default0" having label n'Predicted: Default=0';
   dcl double "P_Default1" having label n'Predicted: Default=1';
   dcl double "_leaf_id_";
   dcl double "_numval_";
   dcl nchar(12) "I_Default" having label n'Into: Default';
   dcl double "EM_EVENTPROBABILITY";
   dcl nchar(12) "EM_CLASSIFICATION";
   dcl double "EM_PROBABILITY";
   varlist allvars [_all_];
 
   method _43V6H5PPKK31A6TVHHTK200AN();
      dcl double _P_;
      dcl double _NEW_ID_;
      dcl double _NODE_ID_;
      dcl double _DT_PRED_PROB_;
      dcl double _DT_PRED_LEV_;
      dcl double _I_;
      dcl double _DT_PREDP_;
      dcl nchar(12) _STRFMT_25082634_;
      dcl double _DT_FI_25082634_[2];
      dcl nchar(12) _TLEVNAME_25082634_[2];
       
      _TLEVNAME_25082634_:=('           1', '           0');
      _STRFMT_25082634_ = ' ';
      _NODE_ID_ = 0.0;
      _NEW_ID_ = -1.0;
      NEXTNODE_25082634: if _NODE_ID_ = 0.0 then do ;
      _STRFMT_25082634_ = LEFT(TRIM(put(DELINQUENCIES, BEST12.)));
      if MISSING(DELINQUENCIES) then do ;
      _NEW_ID_ = -1.0;
      _NUMVAL_ = CREDLINEAGE;
      if ^(MISSING(_NUMVAL_)) then do ;
      if (_NUMVAL_ >= 0.0 & _NUMVAL_ < 0.0) | (_NUMVAL_ >= 0.0 & _NUMVAL_ <
      27.626428934) | (_NUMVAL_ >= 27.626428934 & _NUMVAL_ < 62.10152742) |
      (_NUMVAL_ >= 62.10152742 & _NUMVAL_ < 73.306054956) | (_NUMVAL_ >= 73.306054956
      & _NUMVAL_ < 80.84321682) | (_NUMVAL_ >= 80.84321682 & _NUMVAL_ < 86.527027004)
      | (_NUMVAL_ >= 86.527027004 & _NUMVAL_ < 91.588848446) | (_NUMVAL_ >=
      91.588848446 & _NUMVAL_ < 97.05776925) | (_NUMVAL_ >= 97.05776925 & _NUMVAL_
      < 101.5748796) | (_NUMVAL_ >= 101.5748796 & _NUMVAL_ < 106.486237) | (_NUMVAL_
      >= 106.486237 & _NUMVAL_ < 110.66597878) | (_NUMVAL_ >= 110.66597878 &
      _NUMVAL_ < 114.97718688) | (_NUMVAL_ >= 114.97718688 & _NUMVAL_ < 118.42077648)
      | (_NUMVAL_ >= 118.42077648 & _NUMVAL_ < 121.60062908) | (_NUMVAL_ >=
      121.60062908 & _NUMVAL_ < 125.3854461) | (_NUMVAL_ >= 125.3854461 & _NUMVAL_
      < 128.4412555) | (_NUMVAL_ >= 128.4412555 & _NUMVAL_ < 132.84267686) |
      (_NUMVAL_ >= 132.84267686 & _NUMVAL_ < 137.75837172) | (_NUMVAL_ >= 137.75837172
      & _NUMVAL_ < 144.11440544) | (_NUMVAL_ >= 144.11440544 & _NUMVAL_ < 149.0647448)
      | (_NUMVAL_ >= 149.0647448 & _NUMVAL_ < 155.43475476) | (_NUMVAL_ >= 155.43475476
      & _NUMVAL_ < 160.73126134) | (_NUMVAL_ >= 160.73126134 & _NUMVAL_ < 166.85625206)
      | (_NUMVAL_ >= 166.85625206 & _NUMVAL_ < 171.61409702) | (_NUMVAL_ >=
      171.61409702 & _NUMVAL_ < 175.5425655) | (_NUMVAL_ >= 175.5425655 & _NUMVAL_
      < 178.65516502) | (_NUMVAL_ >= 178.65516502 & _NUMVAL_ < 182.68331064)
      | (_NUMVAL_ >= 182.68331064 & _NUMVAL_ < 186.94189736) | (_NUMVAL_ >=
      186.94189736 & _NUMVAL_ < 190.69194586) | (_NUMVAL_ >= 190.69194586 &
      _NUMVAL_ < 195.4513312) | (_NUMVAL_ >= 195.4513312 & _NUMVAL_ < 199.71874516)
      | (_NUMVAL_ >= 199.71874516 & _NUMVAL_ < 203.64236292) | (_NUMVAL_ >=
      203.64236292 & _NUMVAL_ < 207.20489094) | (_NUMVAL_ >= 207.20489094 &
      _NUMVAL_ < 212.14800992) | (_NUMVAL_ >= 212.14800992 & _NUMVAL_ < 217.4805423)
      | (_NUMVAL_ >= 217.4805423 & _NUMVAL_ < 223.4515072) | (_NUMVAL_ >= 223.4515072
      & _NUMVAL_ < 229.15885092) | (_NUMVAL_ >= 229.15885092 & _NUMVAL_ < 235.48835152)
      | (_NUMVAL_ >= 235.48835152 & _NUMVAL_ < 241.50955708) | (_NUMVAL_ >=
      241.50955708 & _NUMVAL_ < 246.7969491) | (_NUMVAL_ >= 246.7969491 & _NUMVAL_
      < 253.21499462) | (_NUMVAL_ >= 253.21499462 & _NUMVAL_ < 260.21406772)
      | (_NUMVAL_ >= 260.21406772 & _NUMVAL_ < 269.49299654) | (_NUMVAL_ >=
      269.49299654 & _NUMVAL_ < 279.89083788) | (_NUMVAL_ >= 279.89083788 &
      _NUMVAL_ < 290.0805914) | (_NUMVAL_ >= 290.0805914 & _NUMVAL_ < 301.2160331)
      | (_NUMVAL_ >= 301.2160331 & _NUMVAL_ < 309.5001353) | (_NUMVAL_ >= 309.5001353
      & _NUMVAL_ < 324.20083068) | (_NUMVAL_ >= 324.20083068 & _NUMVAL_ < 352.43496456)
      | (_NUMVAL_ >= 352.43496456 & _NUMVAL_ < 649.7471044) then do ;
      _NEW_ID_ = 1.0;
      goto RULEEND_25082634_NODE_0;
      end;
      else if (_NUMVAL_ < 0.0) then do ;
      _NEW_ID_ = 1.0;
      goto RULEEND_25082634_NODE_0;
      end;
      else if (_NUMVAL_ >= 649.7471044) then do ;
      _NEW_ID_ = 1.0;
      goto RULEEND_25082634_NODE_0;
      end;
      end;
      if (_NEW_ID_ = -1.0) then do ;
      _NEW_ID_ = 1.0;
      goto RULEEND_25082634_NODE_0;
      end;
      RULEEND_25082634_NODE_0: _NODE_ID_ = _NEW_ID_;
      goto NEXTNODE_25082634;
      end;
      if _STRFMT_25082634_ in ('5', '4', '1', '0', '3', '2') then do ;
      _NEW_ID_ = 1.0;
      end;
      else if _STRFMT_25082634_ in ('10', '7', '6') then do ;
      _NEW_ID_ = 2.0;
      end;
      else if MISSING(DELINQUENCIES) then do ;
      _NEW_ID_ = 1.0;
      end;
      else do ;
      _NEW_ID_ = 1.0;
      end;
      end;
      else if _NODE_ID_ = 1.0 then do ;
      _STRFMT_25082634_ = LEFT(TRIM(put(DEROGATORYMARKS, BEST12.)));
      if MISSING(DEROGATORYMARKS) then do ;
      _NEW_ID_ = -1.0;
      _NUMVAL_ = CREDLINEAGE;
      if ^(MISSING(_NUMVAL_)) then do ;
      if (_NUMVAL_ >= 0.0 & _NUMVAL_ < 0.0) then do ;
      _NEW_ID_ = 3.0;
      goto RULEEND_25082634_NODE_1;
      end;
      else if (_NUMVAL_ < 0.0) then do ;
      _NEW_ID_ = 3.0;
      goto RULEEND_25082634_NODE_1;
      end;
      else if (_NUMVAL_ >= 649.7471044) then do ;
      _NEW_ID_ = 4.0;
      goto RULEEND_25082634_NODE_1;
      end;
      end;
      _NUMVAL_ = CREDLINEAGE;
      if ^(MISSING(_NUMVAL_)) then do ;
      if (_NUMVAL_ >= 0.0 & _NUMVAL_ < 27.626428934) | (_NUMVAL_ >= 27.626428934
      & _NUMVAL_ < 62.10152742) | (_NUMVAL_ >= 62.10152742 & _NUMVAL_ < 73.306054956)
      | (_NUMVAL_ >= 73.306054956 & _NUMVAL_ < 80.84321682) | (_NUMVAL_ >= 80.84321682
      & _NUMVAL_ < 86.527027004) | (_NUMVAL_ >= 86.527027004 & _NUMVAL_ < 91.588848446)
      | (_NUMVAL_ >= 91.588848446 & _NUMVAL_ < 97.05776925) | (_NUMVAL_ >= 97.05776925
      & _NUMVAL_ < 101.5748796) | (_NUMVAL_ >= 101.5748796 & _NUMVAL_ < 106.486237)
      | (_NUMVAL_ >= 106.486237 & _NUMVAL_ < 110.66597878) | (_NUMVAL_ >= 110.66597878
      & _NUMVAL_ < 114.97718688) | (_NUMVAL_ >= 114.97718688 & _NUMVAL_ < 118.42077648)
      | (_NUMVAL_ >= 118.42077648 & _NUMVAL_ < 121.60062908) | (_NUMVAL_ >=
      121.60062908 & _NUMVAL_ < 125.3854461) | (_NUMVAL_ >= 125.3854461 & _NUMVAL_
      < 128.4412555) | (_NUMVAL_ >= 128.4412555 & _NUMVAL_ < 132.84267686) |
      (_NUMVAL_ >= 132.84267686 & _NUMVAL_ < 137.75837172) | (_NUMVAL_ >= 137.75837172
      & _NUMVAL_ < 144.11440544) | (_NUMVAL_ >= 144.11440544 & _NUMVAL_ < 149.0647448)
      | (_NUMVAL_ >= 149.0647448 & _NUMVAL_ < 155.43475476) | (_NUMVAL_ >= 155.43475476
      & _NUMVAL_ < 160.73126134) | (_NUMVAL_ >= 160.73126134 & _NUMVAL_ < 166.85625206)
      | (_NUMVAL_ >= 166.85625206 & _NUMVAL_ < 171.61409702) | (_NUMVAL_ >=
      171.61409702 & _NUMVAL_ < 175.5425655) | (_NUMVAL_ >= 175.5425655 & _NUMVAL_
      < 178.65516502) | (_NUMVAL_ >= 178.65516502 & _NUMVAL_ < 182.68331064)
      | (_NUMVAL_ >= 182.68331064 & _NUMVAL_ < 186.94189736) | (_NUMVAL_ >=
      186.94189736 & _NUMVAL_ < 190.69194586) | (_NUMVAL_ >= 190.69194586 &
      _NUMVAL_ < 195.4513312) | (_NUMVAL_ >= 195.4513312 & _NUMVAL_ < 199.71874516)
      | (_NUMVAL_ >= 199.71874516 & _NUMVAL_ < 203.64236292) | (_NUMVAL_ >=
      203.64236292 & _NUMVAL_ < 207.20489094) | (_NUMVAL_ >= 207.20489094 &
      _NUMVAL_ < 212.14800992) | (_NUMVAL_ >= 212.14800992 & _NUMVAL_ < 217.4805423)
      | (_NUMVAL_ >= 217.4805423 & _NUMVAL_ < 223.4515072) | (_NUMVAL_ >= 223.4515072
      & _NUMVAL_ < 229.15885092) | (_NUMVAL_ >= 229.15885092 & _NUMVAL_ < 235.48835152)
      | (_NUMVAL_ >= 235.48835152 & _NUMVAL_ < 241.50955708) | (_NUMVAL_ >=
      241.50955708 & _NUMVAL_ < 246.7969491) | (_NUMVAL_ >= 246.7969491 & _NUMVAL_
      < 253.21499462) | (_NUMVAL_ >= 253.21499462 & _NUMVAL_ < 260.21406772)
      | (_NUMVAL_ >= 260.21406772 & _NUMVAL_ < 269.49299654) | (_NUMVAL_ >=
      269.49299654 & _NUMVAL_ < 279.89083788) | (_NUMVAL_ >= 279.89083788 &
      _NUMVAL_ < 290.0805914) | (_NUMVAL_ >= 290.0805914 & _NUMVAL_ < 301.2160331)
      | (_NUMVAL_ >= 301.2160331 & _NUMVAL_ < 309.5001353) | (_NUMVAL_ >= 309.5001353
      & _NUMVAL_ < 324.20083068) | (_NUMVAL_ >= 324.20083068 & _NUMVAL_ < 352.43496456)
      | (_NUMVAL_ >= 352.43496456 & _NUMVAL_ < 649.7471044) then do ;
      _NEW_ID_ = 4.0;
      goto RULEEND_25082634_NODE_1;
      end;
      else if (_NUMVAL_ < 0.0) then do ;
      _NEW_ID_ = 3.0;
      goto RULEEND_25082634_NODE_1;
      end;
      else if (_NUMVAL_ >= 649.7471044) then do ;
      _NEW_ID_ = 4.0;
      goto RULEEND_25082634_NODE_1;
      end;
      end;
      if (_NEW_ID_ = -1.0) then do ;
      _NEW_ID_ = 4.0;
      goto RULEEND_25082634_NODE_1;
      end;
      RULEEND_25082634_NODE_1: _NODE_ID_ = _NEW_ID_;
      goto NEXTNODE_25082634;
      end;
      if _STRFMT_25082634_ in ('5', '7', '6', '9', '8') then do ;
      _NEW_ID_ = 3.0;
      end;
      else if _STRFMT_25082634_ in ('4', '1', '0', '3', '2') then do ;
      _NEW_ID_ = 4.0;
      end;
      else if MISSING(DEROGATORYMARKS) then do ;
      _NEW_ID_ = 4.0;
      end;
      else do ;
      _NEW_ID_ = 4.0;
      end;
      end;
      else if _NODE_ID_ = 2.0 then do ;
      _LEAF_ID_ = 2.0;
      _NEW_ID_ = -1.0;
      _DT_PRED_LEV_ = 0.0;
      _DT_PRED_PROB_ = 1.0;
      _DT_FI_25082634_[1.0] = 1.0;
      _DT_FI_25082634_[2.0] = 0.0;
      end;
      else if _NODE_ID_ = 3.0 then do ;
      _LEAF_ID_ = 3.0;
      _NEW_ID_ = -1.0;
      _DT_PRED_LEV_ = 0.0;
      _DT_PRED_PROB_ = 1.0;
      _DT_FI_25082634_[1.0] = 1.0;
      _DT_FI_25082634_[2.0] = 0.0;
      end;
      else if _NODE_ID_ = 4.0 then do ;
      _LEAF_ID_ = 4.0;
      _NEW_ID_ = -1.0;
      _DT_PRED_LEV_ = 1.0;
      _DT_PRED_PROB_ = 0.92560348239018;
      _DT_FI_25082634_[1.0] = 0.07439651760981;
      _DT_FI_25082634_[2.0] = 0.92560348239018;
      end;
      if _NEW_ID_ >= 0.0 then do ;
      _NODE_ID_ = _NEW_ID_;
      goto NEXTNODE_25082634;
      end;
      I_DEFAULT = _TLEVNAME_25082634_[_DT_PRED_LEV_ + 1.0];
      _I_ = 1.0;
      _DT_PREDP_ = _DT_FI_25082634_[_I_];
      P_DEFAULT1 = _DT_PREDP_;
      _I_ + 1.0;
      _DT_PREDP_ = _DT_FI_25082634_[_I_];
      P_DEFAULT0 = _DT_PREDP_;
      _I_ + 1.0;
      if "P_DEFAULT1" = . then "P_DEFAULT1" = 0.0789224953;
      if "P_DEFAULT0" = . then "P_DEFAULT0" = 0.9210775047;
      if MISSING("I_DEFAULT") then do ;
      _P_ = 0.0;
      if "P_DEFAULT1" > _P_ then do ;
      _P_ = "P_DEFAULT1";
      "I_DEFAULT" = '           1';
      end;
      if "P_DEFAULT0" > _P_ then do ;
      _P_ = "P_DEFAULT0";
      "I_DEFAULT" = '           0';
      end;
      end;
      EM_EVENTPROBABILITY = "P_DEFAULT1";
      EM_CLASSIFICATION = "I_DEFAULT";
      EM_PROBABILITY = MAX("P_DEFAULT1", "P_DEFAULT0");
    
   end;
    
 
   method score(
      double "CredLineAge",
      double "Delinquencies",
      double "DerogatoryMarks",
      IN_OUT char(12) "EM_CLASSIFICATION",
      IN_OUT double "EM_EVENTPROBABILITY",
      IN_OUT double "EM_PROBABILITY",
      IN_OUT char(12) "I_Default",
      IN_OUT double "P_Default0",
      IN_OUT double "P_Default1",
      IN_OUT double "_leaf_id_",
      IN_OUT double "_numval_"
   );
      this."CredLineAge"= "CredLineAge";
      this."Delinquencies"= "Delinquencies";
      this."DerogatoryMarks"= "DerogatoryMarks";
 
      _43V6H5PPKK31A6TVHHTK200AN();
 
      "EM_CLASSIFICATION"= this."EM_CLASSIFICATION";
      "EM_EVENTPROBABILITY"= this."EM_EVENTPROBABILITY";
      "EM_PROBABILITY"= this."EM_PROBABILITY";
      "I_Default"= this."I_Default";
      "P_Default0"= this."P_Default0";
      "P_Default1"= this."P_Default1";
      "_leaf_id_"= this."_leaf_id_";
      "_numval_"= this."_numval_";
   end;
 
 
   method predictedscore(
      double "CredLineAge",
      double "Delinquencies",
      double "DerogatoryMarks",
      IN_OUT char(12) "EM_CLASSIFICATION",
      IN_OUT double "EM_EVENTPROBABILITY",
      IN_OUT double "EM_PROBABILITY",
      IN_OUT char(12) "I_Default",
      IN_OUT double "P_Default0",
      IN_OUT double "P_Default1"
   );
      this."CredLineAge"= "CredLineAge";
      this."Delinquencies"= "Delinquencies";
      this."DerogatoryMarks"= "DerogatoryMarks";
 
      _43V6H5PPKK31A6TVHHTK200AN();
 
      "EM_CLASSIFICATION"= this."EM_CLASSIFICATION";
      "EM_EVENTPROBABILITY"= this."EM_EVENTPROBABILITY";
      "EM_PROBABILITY"= this."EM_PROBABILITY";
      "I_Default"= this."I_Default";
      "P_Default0"= this."P_Default0";
      "P_Default1"= this."P_Default1";
   end;
 
endpackage;
